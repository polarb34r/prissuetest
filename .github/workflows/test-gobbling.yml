name: Test Gobbling, Word Splitting, and GITHUB_PATH

on:
  workflow_dispatch:

jobs:
  bash-test:
    name: Test in Bash (Ubuntu)
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        run: |
          echo "GOOD_VAR=hello-world" >> $GITHUB_ENV
          echo "BAD_VAR=hello world with spaces" >> $GITHUB_ENV

      - name: Add custom directory to PATH
        run: |
          mkdir -p "$HOME/mytools"
          echo 'echo "Hello from custom tool!"' > "$HOME/mytools/mytool"
          chmod +x "$HOME/mytools/mytool"
          echo "$HOME/mytools" >> $GITHUB_PATH

      - name: Test PATH and variables
        run: |
          echo "Current PATH: $PATH"
          echo "GOOD_VAR=[$GOOD_VAR]"
          echo "BAD_VAR=[$BAD_VAR]"
          echo "Running custom tool:"
          mytool

      - name: Test unsafe vs safe usage
        run: |
          echo "Unsafe BAD_VAR (no quotes):"
          echo $BAD_VAR
          echo "Safe BAD_VAR (quoted):"
          echo "$BAD_VAR"

  pwsh-test:
    name: Test in PowerShell (Windows)
    runs-on: windows-latest
    steps:
      - name: Set environment variables
        shell: pwsh
        run: |
          "GOOD_VAR=hello-world" | Out-File -FilePath $env:GITHUB_ENV -Append
          "BAD_VAR=hello world with spaces" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Add custom directory to PATH
        shell: pwsh
        run: |
          $customPath = "$env:USERPROFILE\mytools"
          New-Item -ItemType Directory -Force -Path $customPath | Out-Null
          Set-Content -Path "$customPath\mytool.bat" -Value "@echo off`necho Hello from custom tool!"
          $customPath | Out-File -FilePath $env:GITHUB_PATH -Append

      - name: Test PATH and variables
        shell: pwsh
        run: |
          Write-Host "Current PATH: $env:PATH"
          Write-Host "GOOD_VAR=[$env:GOOD_VAR]"
          Write-Host "BAD_VAR=[$env:BAD_VAR]"
          Write-Host "Running custom tool:"
          mytool

      - name: Test unsafe vs safe usage
        shell: pwsh
        run: |
          Write-Host "Unsafe BAD_VAR (unquoted):"
          Write-Host $env:BAD_VAR
          Write-Host "Safe BAD_VAR (quoted):"
          Write-Host "$env:BAD_VAR"
